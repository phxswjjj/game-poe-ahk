#Include %A_ScriptDir%\Utility\Common.ahk2

; #Include %A_ScriptDir%\Builds\LightArrow.ahk2
#Include %A_ScriptDir%\Builds\ToxicRain.ahk2

AppExe := "PathOfExile.exe"
UniqueID := WinExist("ahk_exe " AppExe)
if not UniqueID {
    OutputLog("[" AppExe "] not found")
    ExitApp
}

SetTimer LifeMonitor, 200
SetTimer ManaMonitor, 300

SetTimer FuncFlaskJob, 300
SetTimer SendSkill, 100

Return

LifeMonitor()
{
    If not WinActive("ahk_id " UniqueID)
    {
        Return
    }


    if PixelSearch(&Px, &Py, 98, 925, 100, 915, 0xA31926, 3) {
        Return
    }

    ; color := PixelGetColor(Px, Py)
    ; OutputLog(color)

    for setting in LifeFlaskSettings {
        if setting.Fire() {
            Send(setting.KeyChar)
            Sleep(200)
            break
        }
    }
}

ManaMonitor() {
    If not WinActive("ahk_id " UniqueID)
    {
        Return
    }


    if PixelSearch(&Px, &Py, 1770, 1050, 1775, 1052, 0x111F43, 3) {
        Return
    }

    ; color := PixelGetColor(Px, Py)
    ; OutputLog(color)

    for setting in ManaFlaskSettings {
        if setting.Fire() {
            Send(setting.KeyChar)
            Sleep(1000)
            break
        }
    }
}

FuncFlaskJob() {
    If !WinActive("ahk_id " UniqueID)
    {
        Return
    }

    If GetKeyState("VKC0", "P") or GetKeyState("RButton", "P")
    {
        for setting in FuncFlaskSettings {
            if not GetKeyState("VKC0", "P") and not GetKeyState("RButton", "P")
                continue
            if setting.Fire() {
                Send(setting.KeyChar)
                Sleep(200)
            }
        }
    }
}

SendSkill()
{
    If !WinActive("ahk_id " UniqueID)
    {
        Return
    }

    If GetKeyState("VKC0", "P") or GetKeyState("RButton", "P")
    {
        for setting in SkillSettings {
            if setting.Fire() {
                Send(setting.KeyChar)
                break
            }
        }
    }
}


~RButton up::
{
    If not WinActive("ahk_id " UniqueID)
    {
        Return
    }

    for setting in RSkillSettings {
        if setting.Fire() {
            Send(setting.KeyChar)
            break
        }
    }
}

^!z:: ; Control+Alt+Z hotkey.
{
    OutputLog("Z pressed")
    OutputLog("Stopped")
    ExitApp
}